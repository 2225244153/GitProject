---Hide drop down will make sure the class is not showing in the class picker
---@class UInterchangeGenericMeshPipeline : UInterchangePipelineBase
---@field public CommonMeshesProperties TWeakObjectPtr<UInterchangeGenericCommonMeshesProperties> @Common Meshes Properties Settings Pointer
---@field public CommonSkeletalMeshesAndAnimationsProperties TWeakObjectPtr<UInterchangeGenericCommonSkeletalMeshesAndAnimationsProperties> @Common SkeletalMeshes And Animations Properties Settings Pointer
---@field public bImportStaticMeshes boolean @If enabled, import the static mesh asset found in the sources.
---@field public bCombineStaticMeshes boolean @If enabled, all translated static mesh nodes will be imported as a single static mesh.
---@field public LodGroup string @The LODGroup to associate with this mesh when it is imported
---@field public bImportCollision boolean @If checked, custom collision will be imported and if there is no custom collision, a generic collision will be automatically generated. If unchecked there will be no collision created or imported.
---@field public bImportCollisionAccordingToMeshName boolean @If enabled, meshes with certain prefixes will be imported as collision primitives for the mesh with the corresponding unprefixed name. Supported prefixes are: UBX_ Box collision UCP_ Capsule collision USP_ Sphere collision UCX_ Convex collision
---@field public bOneConvexHullPerUCX boolean @If enabled, each UCX collision mesh will be imported as a single convex hull. If disabled, a UCX mesh will be decomposed into its separate pieces and a convex hull generated for each.
---@field public bBuildNanite boolean @If enabled this option will allow you to use Nanite rendering at runtime. Can only be used with simple opaque materials.
---@field public bBuildReversedIndexBuffer boolean @If enabled this option will make sure the staticmesh build a reverse index buffer.
---@field public bGenerateLightmapUVs boolean @If enabled this option will generate lightmap for this staticmesh.
---@field public bGenerateDistanceFieldAsIfTwoSided boolean @Whether to generate the distance field treating every triangle hit as a front face. When enabled prevents the distance field from being discarded due to the mesh being open, but also lowers Distance Field AO quality.
---@field public bSupportFaceRemap boolean
---@field public MinLightmapResolution integer
---@field public SrcLightmapIndex integer
---@field public DstLightmapIndex integer
---@field public BuildScale3D FVector @The local scale applied when building the mesh
---@field public DistanceFieldResolutionScale number @Scale to apply to the mesh when allocating the distance field volume texture. The default scale is 1, which is assuming that the mesh will be placed unscaled in the world.
---@field public DistanceFieldReplacementMesh TWeakObjectPtr<UStaticMesh>
---@field public MaxLumenMeshCards integer @Max Lumen mesh cards to generate for this mesh. More cards means that surface will have better coverage, but will result in increased runtime overhead. Set to 0 in order to disable mesh card generation for this mesh. Default is 12.
---@field public bImportSkeletalMeshes boolean @If enable, import the animation asset find in the sources.
---@field public SkeletalMeshImportContentType EInterchangeSkeletalMeshContentType @Re-import partially or totally a skeletal mesh. You can choose betwwen geometry, skinning or everything.
---@field public LastSkeletalMeshImportContentType EInterchangeSkeletalMeshContentType @The value of the content type during the last import. This cannot be edited and is set only on successful import or re-import
---@field public bCombineSkeletalMeshes boolean @If enable all translated skinned mesh node will be imported has a one skeletal mesh, note that it can still create several skeletal mesh for each different skeleton root joint.
---@field public bImportMorphTargets boolean @If enable any morph target shape will be imported.
---@field public bUpdateSkeletonReferencePose boolean @Enable this option to update Skeleton (of the mesh)'s reference pose. Mesh's reference pose is always updated.
---@field public bCreatePhysicsAsset boolean @If checked, create new PhysicsAsset if it doesn't have it
---@field public PhysicsAsset TWeakObjectPtr<UPhysicsAsset> @If this is set, use this specified PhysicsAsset. If its not set and bCreatePhysicsAsset is false, the importer will not generate or set any physic asset.
---@field public bUseHighPrecisionSkinWeights boolean @If Checked, use 16 bits for skin weights instead of 8 bits.
---@field public ThresholdPosition number @Threshold use to decide if two vertex position are equal.
---@field public ThresholdTangentNormal number @Threshold use to decide if two normal, tangents or bi-normals are equal.
---@field public ThresholdUV number @Threshold use to decide if two UVs are equal.
---@field public MorphThresholdPosition number @Threshold to compare vertex position equality when computing morph target deltas.
---@field public BoneInfluenceLimit integer @The maximum number of bone influences to allow each vertex in this mesh to use. If set higher than the limit determined by the project settings, it has no effect. If set to 0, the value is taken from the DefaultBoneInfluenceLimit project setting.
local UInterchangeGenericMeshPipeline = {}

